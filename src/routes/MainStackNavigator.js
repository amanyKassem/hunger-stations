import React , {useState} from "react";import {View, Text, TouchableOpacity, Image} from 'react-native';import COLORS from "../consts/colors";import { createStackNavigator } from '@react-navigation/stack';import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';import styles from '../../assets/styles'import i18n from "../../locale/i18n";import Login 					from "../components/Login";import ActivationCode 			from "../components/ActivationCode";import Home                     from "../components/Home";import Orders                   from "../components/Orders";import Offers                   from "../components/Offers";import More                   	from "../components/More";import GetLocation              from "../components/GetLocation";import LocationProduct          from "../components/LocationProducts";import Category 				from "../components/Category";import Product 					from "../components/Product";import Basket 					from "../components/Basket";import PayMethods 				from "../components/PayMethods";import AddNewCard 				from "../components/AddNewCard";import ConfirmPayment 			from "../components/ConfirmPayment";import PromoCode 				from "../components/PromoCode";import PaymentMethods 			from "../components/PaymentMethods";import Account 					from "../components/Account";import Wallet 					from "../components/Wallet";import Voucher 					from "../components/Voucher";import Bills 					from "../components/Bills";import Support 					from "../components/Support";import MyTickets 				from "../components/MyTickets";import GeneralQues 				from "../components/GeneralQues";import OrderQues 				from "../components/OrderQues";import TechnQues 				from "../components/TechnQues";import Settings 				from "../components/Settings";import UpdateData 				from "../components/UpdateData";const MainStack  = createStackNavigator();const Tabs   	 = createBottomTabNavigator();function TabsScreen() {	return (		<Tabs.Navigator			initialRouteName="home"			tabBarOptions={{				activeTintColor: COLORS.black,				style: styles.footerStyle,				tabStyle : {alignSelf:"center"}			}}		>			<Tabs.Screen				name="home"				component={Home}				options={{					tabBarLabel: ({ color, focused }) => (						<View style={[styles.directionRowCenter , focused ? styles.activeTab : styles.unActiveTab, styles.Width_100]}>							<Image source={color === COLORS.black ? require('../../assets/images/black_home.png') : require('../../assets/images/gary_home.png')} style={[styles.icon20]} resizeMode={'contain'} />							{								focused? <Text style={[styles.textRegular , styles.textSize_13 , {marginLeft:5 , color}]}>{ i18n.t('home') }</Text> : null							}						</View>					),				}}			/>			<Tabs.Screen				name="orders"				component={Orders}				options={{					tabBarLabel: ({ color, focused }) => (						<View style={[styles.directionRowCenter , focused ? styles.activeTab : styles.unActiveTab, styles.Width_100]}>							<Image source={color === COLORS.black ? require('../../assets/images/bills.png') : require('../../assets/images/gray_order.png')} style={[styles.icon20]} resizeMode={'contain'} />							{								focused? <Text style={[styles.textRegular , styles.textSize_13 , {marginLeft:5 , color}]}>{ i18n.t('myOrders') }</Text> : null							}						</View>					),				}}			/>			<Tabs.Screen				name="offers"				component={Offers}				options={{					tabBarLabel: ({ color, focused }) => (						<View style={[styles.directionRowCenter , focused ? styles.activeTab : styles.unActiveTab, styles.Width_100]}>							<Image source={color === COLORS.black ? require('../../assets/images/black_discount.png') : require('../../assets/images/gray_discounts.png')} style={[styles.icon20]} resizeMode={'contain'} />							{								focused? <Text style={[styles.textRegular , styles.textSize_13 , {marginLeft:5 , color}]}>{ i18n.t('offers') }</Text> : null							}						</View>					),				}}			/>			<Tabs.Screen				name="more"				component={More}				options={{					tabBarLabel: ({ color, focused }) => (						<View style={[styles.directionRowCenter , focused ? styles.activeTab : styles.unActiveTab , styles.Width_100]}>							<Image source={color === COLORS.black ? require('../../assets/images/black_more.png') : require('../../assets/images/gray_more.png')} style={[styles.icon20]} resizeMode={'contain'} />							{								focused? <Text style={[styles.textRegular , styles.textSize_13 , {marginLeft:5 , color}]}>{ i18n.t('more') }</Text> : null							}						</View>					),				}}			/>		</Tabs.Navigator>	);}export function MainStackNavigator()  {	return(		<MainStack.Navigator mode={'card'} screenOptions={{headerShown: false}}>			<MainStack.Screen name='tabs' options={{headerShown:false}} component={TabsScreen}/>			<MainStack.Screen name="login" component={Login} />			<MainStack.Screen name="activationCode" component={ActivationCode} />			<MainStack.Screen name="getLocation" component={GetLocation} />			<MainStack.Screen name="locationProduct" component={LocationProduct} />			<MainStack.Screen name="category" component={Category} />			<MainStack.Screen name="product" component={Product} />			<MainStack.Screen name="basket" component={Basket} />			<MainStack.Screen name="payMethods" component={PayMethods} />			<MainStack.Screen name="addNewCard" component={AddNewCard} />			<MainStack.Screen name="confirmPayment" component={ConfirmPayment} />			<MainStack.Screen name="promoCode" component={PromoCode} />			<MainStack.Screen name="paymentMethods" component={PaymentMethods} />			<MainStack.Screen name="account" component={Account} />			<MainStack.Screen name="wallet" component={Wallet} />			<MainStack.Screen name="voucher" component={Voucher} />			<MainStack.Screen name="bills" component={Bills} />			<MainStack.Screen name="support" component={Support} />			<MainStack.Screen name="myTickets" component={MyTickets} />			<MainStack.Screen name="generalQues" component={GeneralQues} />			<MainStack.Screen name="orderQues" component={OrderQues} />			<MainStack.Screen name="technQues" component={TechnQues} />			<MainStack.Screen name="settings" component={Settings} />			<MainStack.Screen name="updateData" component={UpdateData} />		</MainStack.Navigator>	);}